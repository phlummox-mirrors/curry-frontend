
testLC1: (C 0, D 1, F (Prelude.[] 2)) => (0 -> (1 -> (Prelude.[] 2 -> Prelude.[] Prelude.Bool)))
testLC1b: (D 1, F (Prelude.[] 2)) => (0 -> (1 -> (Prelude.[] 2 -> Prelude.[] Prelude.Bool)))
testLC2: (C 0, C 2, D 1, F 2) => (0 -> (1 -> (2 -> Prelude.[] Prelude.Bool)))
testLC3:  (C 0, D 1, F 2, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC3b: (C 0, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC3c: (C 0, D 1, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC3d: (C 0, F 2, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC3e: (C 0, D 1, F 2, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC3f: (C 0, D 1, F 2, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC3g: (C 0, D 1, F 2, F Prelude.Bool, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.Bool -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool)))))
testLC4: (C 0, C 2, D 1, F 2) => (0 -> (1 -> (2 -> Prelude.[] Prelude.Bool)))
testLC5: (C 0, D 2, E 1, F (Prelude.[] 3)) => (0 -> (1 -> (2 -> (Prelude.[] 3 -> Prelude.[] Prelude.Bool))))
testLC6: (F 0) => (0 -> Prelude.[] Prelude.Bool)
testLC6b: (D 0) => (0 -> Prelude.[] Prelude.Bool)
testLC6c: (F 0) => (0 -> Prelude.[] Prelude.Bool)
testLC6d: (D 0) => (0 -> Prelude.[] Prelude.Bool)



testDo1: (C 0, C 1, C 2, E Prelude.Char) => (0 -> (Prelude.Char -> (1 -> (2 -> Prelude.IO Prelude.Bool))))
testDo2: () => (0 -> Prelude.IO 0)
testDo3: (C Prelude.Char) => (Prelude.IO Prelude.Bool)
testDo4: (C Prelude.Char, D Prelude.Char) => (Prelude.IO Prelude.Bool)
testDo5: (C Prelude.Char, D Prelude.Char) => (Prelude.IO Prelude.Bool)
testDo6: (C 1, D 0) => (0 -> (0 -> (1 -> Prelude.IO Prelude.Bool)))
testDo7: (C 1, D 0) => (0 -> (0 -> (1 -> Prelude.IO Prelude.Bool)))
testDo8: (C 2, D 0) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo9: (C 0, D 1) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo9b: (C 0, D 1) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo9c: (C 0, D 1) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo9d: (C 0, D 1) => (0 -> (1 -> (2 -> Prelude.IO (Prelude.(,) Prelude.Bool Prelude.Bool))))
testDo10: (C 0, D 1, E 2) => (0 -> (1 -> (2 -> Prelude.IO 2)))
testDo11: (C 0, D 1, F 2) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo12: (C 0, C 2, D 1, F 2) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo12b: (C 0, D 1, F 2) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo13: (C 0, D 1, E 1, E 2) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo14: (C 0, C 1, D 1, E 2) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))
testDo15: (C 0, C 2, D 1, F 2) => (0 -> (1 -> (2 -> Prelude.IO Prelude.Bool)))

